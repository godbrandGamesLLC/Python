# Online Python compiler (interpreter) to run Python online.
# Write Python 3 code in this online editor and run it.
#Ultimate beginning of script

#Company: Godbrand Games L.L.C.
#Programmer: Akinwale Owi
#Program purpose: Create and use an abstract class, which for now is being used as a base class to pull from.

#beginning of imports
from abc import ABC, abstractmethod
#end of imports


#beginning of computations


#~~~beginning of class building~~~

#~~~~~Beginning of SoccerPlayerAttritbutes(ABC):~~~~
class SoccerPlayerAttritbutes(ABC):

    
    def __init__(self, attribute_one, attribute_two):
        pass
          
    @abstractmethod
    def info_jersey(self):
        
        name_player ="G.Games L.L.C."
        number_jersey_current = 0
        
        print("Player Name:", name_player)
        print("Current jersey Num:", number_jersey_current )
        
    @abstractmethod
    def attribute_shooting(self):
        pass
        #avg player =75
       
   
    @abstractmethod
    def attribute_passing(self):
        pass
         #avg player =75
    
    @abstractmethod
    def attribute_defense(self):
        pass
         #avg player =75
    
    @abstractmethod
    def attribute_speed(self):
        pass   
         #avg player =75
         
    @abstractmethod
    def overall_player(self):
        pass
        #overall= (attribute_shooting + passing_ability 
         
#~~~~~End of SoccerPlayerAttritbutes(ABC):~~~~

#~~~~~Beginning of class Kickers(FootballPlayerAttritbutes):~~~~

class SpeedyStrikers(SoccerPlayerAttritbutes):

    def __init__(self, name_player,speed, shooting):
        self.name_player = name_player
        self.speed =  speed
        self.shooting = shooting

    def info_jersey(self):
         print("Player Name:", self.name_player)
   
    def attribute_passing(self):
        pass
    
    def attribute_shooting(self):
            #ability_shooting = 85
            print("New shooting rating:",self.shooting)
            
    def attribute_speed(self):
       
            print("New speed rating:", self.speed)
    

    def attribute_defense(self):
          pass

    def overall_player(self):
          pass
        
#~~~~~End ofclass Kickers(FootballPlayerAttritbutes):~~~~

#~~~~~~~~~~~~End of class building~~~~~~~~~

#~~~Beginning of Data adds~~~~~~
RealPlayer = SpeedyStrikers('G.Games L.L.C.', 94,87)

#~~~End of Data adds~~~~~~

#~~Print Testing~~
RealPlayer.info_jersey()

RealPlayer.attribute_speed()
RealPlayer.attribute_shooting()
RealPlayer.overall_player()

        
#from the original abstraction class


#Ultimate end of the script
